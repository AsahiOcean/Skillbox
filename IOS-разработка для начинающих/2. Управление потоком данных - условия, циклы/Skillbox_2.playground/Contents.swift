import UIKit

// MARK: -- 1. –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –≥–ª–∞–≤—ã Collection Types –∏ Control Flow –≤ –∫–Ω–∏–≥–µ ¬´The Swift Programming Language¬ª

// MARK: -- 2.  –ù–∞–ø–∏—à–∏—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–¥–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ-—Ä–∞–∑–Ω–æ–º—É —Å–æ–∑–¥–∞–µ—Ç—Å—è Int –º–∞—Å—Å–∏–≤
var a = [Int]()
var b: [Int] = [1, 2, 3]
var c = [4, 5, 6]
var d = [[7,8,9], [10,11,12]]
var e = Array (13...15)
var f = b + c

// MARK: -- 3. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π:
// MARK: 1. —Å–æ–∑–¥–∞—Å—Ç –º–∞—Å—Å–∏–≤ –∏–∑ —Ç—Ä–µ—Ö Int —ç–ª–µ–º–µ–Ω—Ç–æ–≤
var g = 1
var h = 2
var i = 3
var result: [Int] = [g, h, i]

// MARK: 2. –¥–æ–±–∞–≤–∏—Ç –≤ —ç—Ç–æ—Ç –º–∞—Å—Å–∏–≤ –µ—â–µ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç
result.append(4)

// MARK: 3. —É–¥–∞–ª–∏—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
result.remove(at: 0)

// MARK: 4. —Å –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ –Ω–∞–π–¥–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ
var max = result[0]
var min = result[0]
for i in 0..<result.count {
    let i = result[i]
    if i > max {
        max = i
    }
    if i < min {
        min = i
    }
}
min // –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ
max // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ

// MARK: 5. –≤—ã–≤–µ–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º
print("\(max - min)")

// MARK: --  4. –ù–∞–ø–∏—à–∏—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–¥–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ-—Ä–∞–∑–Ω–æ–º—É –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤
result = [1] + result
result.append(5)
result.append(contentsOf: [6, 7])
result.insert(8, at: 6)
result.insert(9, at: result.endIndex)
result += [10, 11]

var numbers = [12, 13]
result.append(contentsOf: numbers)

var numbers2 = [14, 15]
result = result + numbers2

// MARK: -- 5. –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã:

var array = [7, 5, 2] // –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞
array[1] = 9 // –ó–∞–º–µ–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Å –∏–Ω–¥–µ–∫—Å–æ–º "1"
array[2] = array[1] + array[2] // –ó–∞–º–µ–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Å –∏–Ω–¥–µ–∫—Å–æ–º "2", —Å—É–º–º–æ–π –∑–Ω–∞—á–µ–Ω–∏–π —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ "1" –∏ "2"
print(array[2]) // –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –∑–Ω–∞—á–µ–Ω–∏—è —Å –∏–Ω–¥–µ–∫—Å–æ–º "2" –∏–∑ –º–∞—Å—Å–∏–≤–∞ "array"

// MARK: –†–µ–∑—É–ª—å—Ç–∞—Ç: 11

// MARK: -- 6. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π:

// MARK: 1. –°–æ–∑–¥–∞—Å—Ç –º–∞—Å—Å–∏–≤ —Å –∏–º–µ–Ω–∞–º–∏ –ª—é–¥–µ–π (—Å—Ç—Ä–æ–∫–∏)
var name: [String] = ["Tommy", "Alice", "Mark", "Eva"]

// MARK: 2. –°–æ–∑–¥–∞—Å—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é greeting (–ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É)
var greeting: [String] = []

// MARK: 3. –í —Ü–∏–∫–ª–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–µ—Ç–Ω–æ–≥–æ (–ø–æ –ø–æ—Ä—è–¥–∫—É) –∏–º–µ–Ω–∏ –¥–æ–±–∞–≤–∏—Ç –≤ —Å—Ç—Ä–æ–∫—É greeting "Go left, \(name)"; –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–µ—á–µ—Ç–Ω–æ–≥–æ ‚Äì "Go right, \(name)"
for i in 0..<name.count {
    if i % 2 == 1 {
        greeting.append("Go left, \(name[i])")
    }
    if i % 2 == 0 {
        greeting.append("Go right, \(name[i])")
    }
}
print(greeting)

// MARK: --  7. –û–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–∞–º–∏, –≤ —á–µ–º —Ä–∞–∑–ª–∏—á–∏–µ –º–µ–∂–¥—É –º–∞—Å—Å–∏–≤–æ–º –∏ —Å–µ—Ç–æ–º
// MARK: –í –º–∞—Å—Å–∏–≤–∞—Ö —ç–ª–µ–º–µ–Ω—Ç—ã –∏–º–µ—é—Ç –∏–Ω–¥–µ–∫—Å, –≤ —Å–µ—Ç–∞—Ö —Ç–∞–∫–æ–≥–æ –Ω–µ—Ç - –∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ö–∞–æ—Ç–∏—á–Ω–∞; –º–∞—Å—Å–∏–≤—ã –º–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏—Ç—å —Å –æ—Ä–≥–∞–Ω–∞–π–∑–µ—Ä–æ–º, –∞ —Å–µ—Ç—ã —Å –º–µ—à–∫–æ–º. –í —Å–µ—Ç–∞—Ö –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ç–∞–∫–æ–≤–∞ –∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –º–∞—Å—Å–∏–≤–æ–≤.

// MARK: --  8. –î–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ–¥–∞, —á—Ç–æ –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–¥–ø—É–Ω–∫—Ç–æ–≤:
let myEmoji: Set = ["üòÇ", "üéä", "üï∫", "üöÄ"]
let wifeEmoji: Set = ["üé∏", "üòÇ", "üéä", "ü¶ã"]
myEmoji.intersection(wifeEmoji) // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –¥–ª—è –æ–±–æ–∏—Ö —Å–µ—Ç–æ–≤ —ç–ª–µ–º–µ–Ω—Ç—ã // {"üéä", "üòÇ"}
myEmoji.symmetricDifference(wifeEmoji) // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –¥–ª—è –æ–±–æ–∏—Ö —Å–µ—Ç–æ–≤ —ç–ª–µ–º–µ–Ω—Ç—ã // {"üé∏", "üï∫", "ü¶ã", "üöÄ"}
myEmoji.union(wifeEmoji) // –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –æ–±–∞ —Å–µ—Ç–∞ // {"ü¶ã", "üé∏", "üéä", "üöÄ", "üòÇ", "üï∫"}
myEmoji.subtracting(wifeEmoji) // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–≤–æ–≥–æ —Å–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤–æ –≤—Ç–æ—Ä–æ–º // {"üï∫", "üöÄ"}

// MARK: -- 9. –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ –ø—Ä–∏–º–µ—Ä—É –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ Set, Array –∏ Dictionary
let salt: Set = ["Na", "Cl"]
let alphabet: Array<String> = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
var reside: [String: Int] = ["Alice": 6, "Tommy": 4, "Eva": 2, "Mark": 5, "Lisa": 3]

// MARK: -- 10. –î–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ–¥–∞ –¥–æ–ø–∏—à–∏—Ç–µ —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–µ–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è —á–∏—Å–ª–∞ number –≤ —Å—Ç–µ–ø–µ–Ω—å power:

let number = 5
let power = 3
var answer = 1
for _ in 1...power {
    answer *= number
}

print("\(number) –≤ —Å—Ç–µ–ø–µ–Ω–∏ \(power) —Ä–∞–≤–Ω–æ \(answer)")

// MARK: -- 11. –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –º—ã —Ö—Ä–∞–Ω–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 10):
let mood = 7

// MARK: 1. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã (–ø—Ä–æ–º–µ–∂—É—Ç–∫–∏ [0, 3], [4, 7], [8,10]) –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø–æ–º–æ—â—å—é if

if mood <= 0 && mood <= 3 {
    print("BAD!")
}

if mood >= 4 && mood <= 7 {
    print("Normal")
}

if mood >= 8 && mood >= 10 {
    print("Good Mood!")
}

// MARK: 2. –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ, –Ω–æ –≤–º–µ—Å—Ç–æ if –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ switch

switch mood {
case 0...3 :
    print("BAD!")
case 4...7 :
    print("Normal")
case 9...10 :
    print("Good Mood!")
default :
    print("Are you fine? Call your friends!")
}

// MARK: -- –ë–æ–Ω—É—Å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –∫ —É—Ä–æ–∫–∞–º:


// MARK: –ö–æ–ª–ª–µ–∫—Ü–∏–∏
// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å?

// var array = ["üèÜ", "üòé", "üé∞"]
// array[1] = "üíÉ" // –ó–∞–º–µ–Ω–∞ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ
// array[2] = array[1] + array[2] // "üíÉüé∞" (–ó–∞–º–µ–Ω–∞ –≤—Ç–æ—Ä–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å—É–º–º–æ–π 1 –∏ 2 —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
// print(array)

// MARK: –í –∫–æ–Ω—Å–æ–ª–∏: "["üèÜ", "üíÉ", "üíÉüé∞"]"

// MARK: –£—Å–ª–æ–≤–∏—è
// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å?

// var array = ["üèÜ", "üòé", "üé∞"]
// if array.count == 3 && array[1] == "üòé"{ print("Good emoji") } // –ö–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ array —Ä–∞–≤–Ω–æ 3 –∏ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (–ü–û –ò–ù–î–ï–ö–°–£) = "üòé", —Ç–æ –≤—ã–≤–µ—Å—Ç–∏ "Good emoji"
// else { print("Bad emoji pack") }
// –í –∫–æ–Ω—Å–æ–ª–∏: Good emoji

// MARK: –¶–∏–∫–ª—ã
// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å?

// var sum = 0
// var array = [1, 2, 5, 9, 10, 12, 17]
// for v in array{
//      if v % 2 == 0 { sum += v } // –ü–µ—Ä–µ–±—Ä–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ array, –µ—Å–ª–∏ –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è —Ä–∞–≤–µ–Ω = 0, —Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sum –ø—Ä–∏—Å–≤–æ–∏—Ç—å —Å–æ —Å–ª–æ–∂–µ–Ω–∏–µ–º —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ (2+10+12=24)
// }
// print(sum)

// MARK: –í –∫–æ–Ω—Å–æ–ª–∏: 24

// MARK: -- –û–ø–µ—Ä–∞—Ç–æ—Ä switch
// MARK: –í –∫–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö —É–¥–æ–±–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å switch, –∞ –≤ –∫–∞–∫–∏—Ö if?

//  switch —É–¥–æ–±–µ–Ω –∫–æ–≥–¥–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ä–∞–∑—É –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–π (–∫–æ–¥ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∫–æ–º–ø–∞–∫—Ç–Ω–µ–µ –∏ —á–∏—Ç–∞–±–µ–ª—å–Ω–µ–µ), –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ if –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ, –∞ –µ—Å–ª–∏ if-else –ø–∏—Å–∞—Ç—å –ª–µ—Å–µ–Ω–∫–æ–π, —Ç–æ –∫–æ–¥ –≤—ã–π–¥–µ—Ç –≥—Ä–æ–º–æ–∑–¥–∫–∏–º –∏ –≥–¥–µ-—Ç–æ –º–æ–∂–Ω–æ –∑–∞–ø—É—Ç–∞—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏
