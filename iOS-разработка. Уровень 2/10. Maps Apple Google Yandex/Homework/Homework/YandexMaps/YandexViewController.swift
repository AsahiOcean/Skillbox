import UIKit
import MapKit
import YandexMapKit
// Skillbox
// –°–∫–∏–ª–ª–±–æ–∫—Å

// —Å—Ç–∞—Ç—å—è –ø—Ä–æ —Å–≤—è–∑–∫—É CLLocationManager –∏ YMKLocationManager
// https://habr.com/ru/post/479432/

// –û–ø–∏—Å–∞–Ω–∏–µ –∫–ª—é—á–µ–π –¥–ª—è info.plist
/* http://spec-zone.ru/RU/iOS/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html
 */

/*
–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞:
–∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞—Ä—Ç—ã: Google, Yandex, AppleMaps

–¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –∫–∞—Ä—Ç, —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–¥–∞–Ω–∏—è (–¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç—ã –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ):
1) –ø–æ–∫–∞–∑ —Å–∞–º–æ–π –∫–∞—Ä—Ç—ã –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
2) –ø–æ–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
3) –ø–æ–∫–∞–∑ 5 —Ç–æ—á–µ–∫ (POI) —Å –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏ –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ (–¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä) —Å —Ä–∞–∑–Ω—ã–º–∏ –∏–∫–æ–Ω–∫–∞–º–∏
4) —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –Ω–∞ —ç—Ç–∏ 5 —Ç–æ—á–µ–∫
5) –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —Ç–æ—á–∫–∏: –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–∂–∞–ª–∏
*/

class YandexViewController: UIViewController {
    @IBOutlet weak var mapView: YMKMapView!
    private var annotations: [YMKPlacemarkMapObject] = []
    @IBOutlet weak var findMe: UIButton!
    @IBAction func findMeAction(_ sender: UIButton) {
        
        if toggle == false {
            print("–ò—â—É —Ç–µ–±—è üëÄ") // looking for you
            let scale = UIScreen.main.scale
            userLocationLayer.setVisibleWithOn(true)
            //userLocationLayer.isAutoZoomEnabled = true
            userLocationLayer.isHeadingEnabled = true
            
            //MARK: nil - –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –º–∞—Ä–∫–µ—Ä (—Å—Ç—Ä–µ–ª–æ—á–∫–∞ –∏–ª–∏ –º–µ—Ç–∫–∞ "–Ø")
            userLocationLayer.setObjectListenerWith(nil)
            //MARK: self - –Ω–∞—Å–ª–µ–¥—É–µ—Ç –º–∞—Ä–∫–µ—Ä –∏–∑ –º–µ—Ç–æ–¥–∞ onObjectAdded
            //userLocationLayer.setObjectListenerWith(self)
            
            userLocationLayer.setAnchorWithAnchorNormal(CGPoint(
                x: 0.5 * mapView.frame.size.width * scale,
                y: 0.5 * mapView.frame.size.height * scale),
                // anchorCourse - –ø–æ–ª–æ–∂–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ
                    anchorCourse: CGPoint(
                        x: 0.5 * mapView.frame.size.width * scale,
                        y: 0.75 * mapView.frame.size.height * scale))
            
            //MARK: –ó–∞–ø–∏—Å—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã(!)
            //–≤ –º–æ–º–µ–Ω—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ findMe –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞–º–µ—Ä—ã, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ
            //–Ω–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ –≤–æ viewDidLoad()
            mapView.mapWindow.map.addCameraListener(with: self)
            
            self.findMe.setTitle("STOP", for: .normal)
            self.findMe.backgroundColor = .systemRed
            self.toggle = true
        } else {
            userLocationLayer.setVisibleWithOn(false)
            mapView.mapWindow.map.removeCameraListener(with: self)
            self.toggle = false
            print("–ü–æ–∏—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω") // stop get location
            self.findMe.setTitle("Find Me", for: .normal)
            self.findMe.backgroundColor = .systemGreen
            
            let alert = UIAlertController(title: "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ?", message: "Return to starting point?", preferredStyle: .actionSheet)

            alert.addAction(UIAlertAction(title: "–î–∞ (Yes)", style: .default, handler: { action in
                self.mapView.mapWindow.map.move(with: YMKCameraPosition(
                        target: places.center()!,
                        zoom: self.zoom,
                        azimuth: 0,
                        tilt: 0),
                            animationType: YMKAnimation(
                                type: .smooth,
                                duration: 1),
                                cameraCallback: nil)
            }))
            alert.addAction(UIAlertAction(title: "–ù–µ—Ç (No)", style: .cancel, handler: nil))
            self.present(alert, animated: true)
        }
    }
    
    private var circleMapObjectTapListener: YMKMapObjectTapListener!
    lazy var userLocationLayer = YMKMapKit.sharedInstance().createUserLocationLayer(with: mapView.mapWindow)
    var toggle = false
    
    var zoom: Float = 1
    private var animationIsActive = true
        
    override func viewDidLoad() {
        super.viewDidLoad()
        
        mapView.layer.zPosition = 1
        
        //MARK: findMe button
        DispatchQueue.main.async {
            self.findMe.layer.cornerRadius = self.findMe.frame.width / 2
            self.findMe.layer.frame.size = CGSize(width: 80, height: 80)
        }
        mapView.addSubview(findMe)
        findMe.layer.zPosition = 1000

        let map = mapView.mapWindow.map
        map.isRotateGesturesEnabled = true
        map.isNightModeEnabled = false
        
        //MARK: –ø–æ–¥–≥–æ–Ω –≤–∏–¥–∏–º–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞ –ø–æ–¥ —à–∏—Ä–∏–Ω—É —ç–∫—Ä–∞–Ω–∞
        //–≤–µ—Ä–æ—è—Ç–Ω–æ –≤ YandexMapKit –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∞–µ—Ç —Ç–æ–∂–µ —Å–∞–º–æ–µ
        //–≤ Extensions.swift –ª–µ–∂–∏—Ç —Ñ–æ—Ä–º—É–ª–∞ –¥–ª—è YMKVisibleRegion
        func calcZoom(region: YMKBoundingBox!) -> Float {
            let width = Float(self.view.frame.size.width)
            let southWest = region.southWest
            let northEast = region.northEast

            var delta = Float(northEast.longitude - southWest.longitude)

            if delta < 0 {
                delta = Float(360 + northEast.longitude) - Float(southWest.longitude)
            }
            return log2(360 * width / (360 * Float(delta)))
        }
        
        self.zoom = calcZoom(region: places.region())
        
        /*
         https://tech.yandex.com/maps/mapkit/doc/3.x/concepts/ios/quickstart-docpage/
         */
        mapView.mapWindow.map.move(with: YMKCameraPosition(
                target: places.center()!,
                zoom: self.zoom,
                azimuth: 0,
                tilt: 0), // –Ω–∞–∫–ª–æ–Ω –∫–∞–º–µ—Ä—ã
                    animationType: YMKAnimation(
                        type: .smooth,
                        duration: 2),
                        cameraCallback: { _ in
                    print("ZOOM = \(self.zoom)\n")
                    print("~~~~~~~~~~~~~~~~~~~~~")
                })
        
        //MARK: - mapObjects
        let mapObjects = mapView.mapWindow.map.mapObjects
        
        for place in places {
            let placemark = mapObjects.addPlacemark(with: YMKPoint(latitude: place.coordinate.latitude, longitude: place.coordinate.longitude))
                        
            let image = place.image?.scaled(with: 0.25) ?? UIImage(named: "marker")!
                        
            placemark.title = place.title!
            placemark.snippet = place.snippet!
            placemark.setIconWith(image)
            
        }
        //MARK: addTapListener –ø–æ–º–æ–∂–µ—Ç –æ—Ç—Å–ª–µ–¥–∏—Ç—å –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –æ–±—ä–µ–∫—Ç
        mapObjects.addTapListener(with: self)
    }
    
    func YMKAnnotation(geopoint: YMKPoint, text: String) {
        
        let annotationView = UIView(frame: CGRect(x: 0, y: 0, width: 200, height: 50))
        let textView = UITextView()
        textView.text = text
        textView.sizeToFit()
        textView.center = annotationView.center
        annotationView.addSubview(textView)
        
        let viewProvider = YRTViewProvider(uiView: annotationView)
        
        let mapObjects = mapView.mapWindow.map.mapObjects
        let viewPlacemark = mapObjects.addPlacemark(
            with: geopoint,
            view: viewProvider!)
        
        viewProvider?.snapshot()
        viewPlacemark.setViewWithView(viewProvider!)
    }
}

extension YandexViewController: YMKMapObjectTapListener {
    
    // MARK: - YMKMapObjectTapListener
    func onMapObjectTap(with mapObject: YMKMapObject, point: YMKPoint) -> Bool {
        
        guard let placemark = mapObject as? YMKPlacemarkMapObject else { return false }
        
        if placemark.title != nil {
            print("\(placemark.title!)" + " (\(placemark.snippet!))")
            YMKAnnotation(geopoint: placemark.geometry, text: placemark.title!)
        }
                
        //MARK: –ø–æ –Ω–∞–∂–∞—Ç–∏—é –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é –Ω–∞–¥ –æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –æ–∫–Ω–µ
        // –≤ –∑–¥–∞–Ω–∏–∏ —É–∫–∞–∑–∞–Ω–æ: –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–∂–∞–ª–∏
        
        //MARK: –ü–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –∫ –º–∞—Ä–∫–µ—Ä—É
        //mapView.mapWindow.map.move(with: YMKCameraPosition(target: point, zoom: zoom + 2.5, azimuth: 0, tilt: 0), animationType: YMKAnimation(type: .smooth, duration: 0.5), cameraCallback: ({ _ in print(placemark.title) }))
        return true
    }
}

extension YandexViewController: YMKLocationDelegate, YMKMapCameraListener {
    func onLocationUpdated(with location: YMKLocation) {
        print("onLocationUpdated: lat: \(location.position.latitude), lng: \(location.position.longitude)")
    }

    func onLocationStatusUpdated(with status: YMKLocationStatus) {
        print("onLocationStatusUpdated: \(status)")
    }

    func onCameraPositionChanged(with map: YMKMap, cameraPosition: YMKCameraPosition, cameraUpdateSource: YMKCameraUpdateSource, finished: Bool) {
        print("lat: \(cameraPosition.target.latitude) | lng: \(cameraPosition.target.longitude)")
    }
}
